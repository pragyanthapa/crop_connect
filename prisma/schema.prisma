// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  FARMER
  BUYER
}

model User {
  id       String  @id @default(uuid())
  name     String?
  username String  @unique
  password String
  role     Role
  location String

  farmer   Farmer? @relation("UserFarmer")
  buyer    Buyer?  @relation("UserBuyer")
}

model Farmer {
  id        String  @id @default(uuid())
  userId    String  @unique
  user      User    @relation("UserFarmer", fields: [userId], references: [id], onDelete: Cascade)

  experience Int
  farmSize   Float
  cropTypes  String[]
  crops      Crop[]
  createdAt  DateTime @default(now())
}

model Buyer {
  id        String  @id @default(uuid())
  userId    String  @unique
  user      User    @relation("UserBuyer", fields: [userId], references: [id], onDelete: Cascade)

  community String?
  contracts Contract[]
  createdAt DateTime @default(now())
}

model Crop {
  id          String  @id @default(uuid())
  name        String
  quantity    Int
  price       Float
  imageUrl    String?
  description String
  farmerId    String
  location    Json
  farmer      Farmer @relation(fields: [farmerId], references: [id], onDelete: Cascade)
  
  contracts Contract[]
  createdAt DateTime @default(now())
}

model Contract {
  id        String  @id @default(uuid())
  
  buyerId   String
  cropId    String
  
  buyer     Buyer   @relation(fields: [buyerId], references: [id], onDelete: Cascade)
  crop      Crop    @relation(fields: [cropId], references: [id], onDelete: Cascade)
  
  status    String  @default("Pending") // Possible values: Pending, Approved, Completed
  deliveryDate DateTime
  notes     String?
  createdAt DateTime @default(now())
}
